jenkins:

  # banner to be displayed on welcome page
  systemMessage: |
    Jenkins Configuration as Code Plugin is awesome !!!
    Welcome to jenkins configuration-as-code demo by Ekambaram Pasham<ekambaram.pasham@gmail.com>.
    For more information look at the official repo https://github.com/jenkinsci/configuration-as-code-plugin
    
    This Jenkins is completely auto configured. The config is now handled by Jenkins Configuration as Code Plugin.
    JCasC config can be found in the jenkins.yaml file in the $JENKINS_HOME/casc/ folder.

  # Configure crumb issuer
  crumbIssuer: standard
  
  # Enable agent -> master access control
  remotingSecurity:
    enabled: true
  
  # set slave agent port number
  slaveAgentPort: 50000
  
  # Configure agent protocols
  agentProtocols:
    - "Ping"
    - "JNLP4-connect"
  
  # Configure local users
  # Disable ability to signup
  # Create administrator account
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "jenkins"
          password: "${JENKINS_USER_PASSWORD:-s3cret}"
        - id: "admin"
          password: "${JENKINS_ADMIN_PASSWORD:-passw0rd}"
        - id: "cicd"
          password: "${CICD_PASSWORD:-passw0rd}"
        - id: "ekambaram"
          password: "${EKAMBARAM_PASSWORD:-passw0rd}"
        - id: "infy"
          password: "${INFY_PASSWORD:-passw0rd}"
        - id: "ek_hashed"
          # password is password
          password: "#jbcrypt:$2a$10$3bnAsorIxhl9kTYvNHa2hOJQwPzwT4bv9Vs.9KdXkh9ySANjJKm5u"

  # Configure role-based authorization strategy
  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Jenkins administrators"
            permissions:
              - "Overall/Administer"
            assignments:
              - "admin"
          - name: "developer"
            description: "Developers"
            permissions:
              - "Overall/Read"
              - "Job/Build"
              - "Job/Cancel"
              - "Job/Configure"
              - "Job/Create"
              - "Job/Discover"
              - "Job/Read"
              - "Job/Workspace"
            assignments:
              - "cicd"
              - "ekambaram"
          - name: "readonly"
            description: "Read-only users"
            permissions:
              - "Overall/Read"
              - "Job/Read"
            assignments:
              - "authenticated"
              - "infy"
              - "ek_hashed"
  
  
# Disable CLI over Remoting
security:
  remotingCLI:
    enabled: false
    
 
credentials:
  system:
    domainCredentials:
      - domain:
          name: "GitHub"
          description: "Github"
          specifications:
            - hostnameSpecification:
                includes: "github.com, *.github.com"
        credentials:
          - string:
              scope: GLOBAL
              id: github_access_token
              secret: ${GITHUB_ACCESS_TOKEN}
              description: Github Access Token
          - usernamePassword:
              scope: GLOBAL
              id: github_username_password
              username: "${GITHUB_USERNAME:-epasham}"
              password: ${GITHUB_PASSWORD}
      - domain:
          name: "Slack"
          description: "Slack"
          specifications:
            - hostnameSpecification:
                includes: "slack.com, *.slack.com"
        credentials:
          - string:
              scope: GLOBAL
              id: slack_access_token
              secret: ${SLACK_ACCESS_TOKEN}
              description: Slack Access Token
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "EKJENKINS"
              username: "admin"
              password: "${JENKINS_PASSWORD}"
              description: "Username/Password Credentials for Jenkins"
          - usernamePassword:
              scope: SYSTEM
              id: "dockerHUB"
              username: "${dockerhub_user_name:-ekambaram}"
              password: "${dockerhub_pass:-password}"
              description: "Username/Password Credentials for DockerHub"

 

jobs:
  - script: >
      folder('INFY-CI') {
          displayName('INFY-CI')
          description('INFY-CI build infrastructure')
      }
# The following jobs are some examples of job dsl configured through JCasC
  - script: |
      def myJob = freeStyleJob('SimpleJob')
      myJob.with {
          description 'A Simple Job'
      }
  - script: |
      job('example-job-from-job-dsl') {
          scm {
              github('jenkinsci/job-dsl-plugin', 'master')
          }
          triggers {
              cron("@hourly")
          }
          steps {
              shell("echo 'Hello World'")
          }
      }
  - script: >
      pipelineJob('simple-node-js-react-npm-app') {
          description("simple nodejs Pipeline Job")
          definition {
              cpsScm {
                  scriptPath 'jenkins/Jenkinsfile'
                  scm {
                    git {
                        remote { url 'https://github.com/epasham/simple-node-js-react-npm-app.git' }
                        branch '*/master'
                        extensions {}
                    }
                  }
              }
          }
      }
  - script: >
      multibranchPipelineJob('configuration-as-code') {
          branchSources {
              git {
                     id = 'configuration-as-code'
                     remote('https://github.com/jenkinsci/configuration-as-code-plugin.git')
                   }
           }
      }
  - script: >
      organizationFolder(System.getenv('GITHUB_ORGANIZATION') ?: 'epasham') {
        description("Github Organization folder job configured with JCasC. Set the GITHUB_ORGANIZATION environment variable when launching the container to define the organization name.")
        displayName(System.getenv('GITHUB_ORGANIZATION') ?: 'epasham')
        
        // Projects
        organizations {
          github {
            scanCredentialsId('github_username_password')
            repoOwner(System.getenv('GITHUB_ORGANIZATION') ?: 'epasham')
          }
        }
        
        // Project Recognizers
        projectFactories {
            workflowMultiBranchProjectFactory {
                scriptPath 'Jenkinsfile'
            }
        }
        
        // Orphaned Item Strategy
        orphanedItemStrategy {
          discardOldItems {
            daysToKeep(-1)
            numToKeep(-1)
          }
        }
        
        // "Scan Organization Folder Triggers (in minutes)" : 1 day
        triggers {
          periodic(1440)
        }
      }   
   
  - url: https://raw.githubusercontent.com/epasham/docker-repo/master/ci-cd-ct/cfg-as-code/jobs/docker_do_cleanup.groovy

unclassified:
  
  # Set jenkins location
  location:
    url: ${JENKINS_URL}
    
  globalLibraries:
    libraries:
    - name: "cicd-lib"
      retriever:
        modernSCM:
          scm:
            git:
              remote: "https://github.com/epasham/jenkins-shared-library.git"
  
  #github
  githubpluginconfig:
    configs:
    - name: "epasham's github"
      apiUrl: "https://api.github.com"
      credentialsId: "github-access-token"
      manageHooks: true

  #slack
  slackNotifier:  
    teamDomain: infy
    room: general
    tokenCredentialId: slack-access-token  

  # Configure simple theme plugin
  simple-theme-plugin:
    elements:
      - cssUrl:
          #url: "https://cdn.rawgit.com/afonsof/jenkins-material-theme/gh-pages/dist/material-cyan.css"
          url: "https://tobix.github.io/jenkins-neo2-theme/dist/neo-light.css"
