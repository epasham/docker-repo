jenkins:

  # banner to be displayed on welcome page
  systemMessage: |
    Jenkins Configuration as Code Plugin is awesome !!!
    Welcome to jenkins configuration-as-code demo by Ekambaram Pasham<ekambaram.pasham@gmail.com>.
    For more information look at the official repo https://github.com/jenkinsci/configuration-as-code-plugin
    
    This Jenkins is completely auto configured. The config is now handled by Jenkins Configuration as Code Plugin.
    JCasC config can be found in the jenkins.yaml file in the $JENKINS_HOME/casc/ folder.

  # Configure crumb issuer
  crumbIssuer: standard
  
  # Enable agent -> master access control
  remotingSecurity:
    enabled: true
  
  # set slave agent port number
  slaveAgentPort: 50000
  
  # Configure agent protocols
  agentProtocols:
    - "Ping"
    - "JNLP4-connect"
  
  # Configure local users
  # Disable ability to signup
  # Create administrator account
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "jenkins"
          password: "${JENKINS_USER_PASSWORD:-s3cret}"
        - id: "admin"
          password: "${JENKINS_ADMIN_PASSWORD:-passw0rd}"
        - id: "cicd"
          password: "${CICD_PASSWORD:-passw0rd}"
        - id: "ekambaram"
          password: "${EKAMBARAM_PASSWORD:-passw0rd}"
        - id: "infy"
          password: "${INFY_PASSWORD:-passw0rd}"

  # Configure role-based authorization strategy
  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Jenkins administrators"
            permissions:
              - "Overall/Administer"
            assignments:
              - "admin"
          - name: "developer"
            description: "Developers"
            permissions:
              - "Overall/Read"
              - "Job/Build"
              - "Job/Cancel"
              - "Job/Configure"
              - "Job/Create"
              - "Job/Discover"
              - "Job/Read"
              - "Job/Workspace"
            assignments:
              - "cicd"
              - "ekambaram"
          - name: "readonly"
            description: "Read-only users"
            permissions:
              - "Overall/Read"
              - "Job/Read"
            assignments:
              - "authenticated"
  
  
# Disable CLI over Remoting
security:
  remotingCLI:
    enabled: false
    
 
credentials:
  system:
    domainCredentials:
      - domain:
          name: "GitHub"
          description: "Github"
          specifications:
            - hostnameSpecification:
                includes: "github.com, *.github.com"
        credentials:
          - string:
              scope: GLOBAL
              id: github_access_token
              secret: ${GITHUB_ACCESS_TOKEN}
              description: Github Access Token
          - usernamePassword:
              scope: GLOBAL
              id: github_username_password
              username: "${GITHUB_USERNAME:-epasham}"
              password: ${GITHUB_PASSWORD}
      - domain:
          name: "Slack"
          description: "Slack"
          specifications:
            - hostnameSpecification:
                includes: "slack.com, *.slack.com"
        credentials:
          - string:
              scope: GLOBAL
              id: slack_access_token
              secret: ${SLACK_ACCESS_TOKEN}
              description: Slack Access Token
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "EKJENKINS"
              username: "admin"
              password: "${JENKINS_PASSWORD}"
              description: "Username/Password Credentials for Jenkins"
          - usernamePassword:
              scope: SYSTEM
              id: "dockerHUB"
              username: "${dockerhub_user_name:-ekambaram}"
              password: "${dockerhub_pass:-password}"
              description: "Username/Password Credentials for DockerHub"

 

jobs:
# The following jobs are some examples of job dsl configured through JCasC
  - script: |
      def myJob = freeStyleJob('SimpleJob')
      myJob.with {
          description 'A Simple Job'
      }
  - script: |
      job('example-job-from-job-dsl') {
          scm {
              github('jenkinsci/job-dsl-plugin', 'master')
          }
          triggers {
              cron("@hourly")
          }
          steps {
              shell("echo 'Hello World'")
          }
      }

unclassified:
  
  # Set jenkins location
  location:
    url: ${JENKINS_URL}


  # Configure simple theme plugin
  simple-theme-plugin:
    elements:
      - cssUrl:
          #url: "https://cdn.rawgit.com/afonsof/jenkins-material-theme/gh-pages/dist/material-cyan.css"
          url: "https://tobix.github.io/jenkins-neo2-theme/dist/neo-light.css"
