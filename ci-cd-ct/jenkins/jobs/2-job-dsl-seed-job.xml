<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 12 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.38">
      <scriptText>// Example from https://jenkinsci.github.io/job-dsl-plugin/

def giturl = &apos;https://github.com/quidryan/aws-sdk-test.git&apos;
for(i in 0..10) {
  job(&quot;Job-DSL-Tutorial-1-Test-${i}&quot;) {
    scm {
      git {
        remote {
          url(giturl)
        }
        createTag(false)
        clean()
      }
    }
    triggers {
        scm(&apos;15/H * * * *&apos;)
        githubPush()
    }
    steps {
      maven {
        goals(&apos;clean&apos;)
        goals(&apos;verify&apos;)
        goals(&quot;test -Dtest.suite=${i}&quot;)
        mavenOpts(&apos;-Xms256m&apos;)
        mavenOpts(&apos;-Xmx512m&apos;)
        properties(skipTests: true)
        mavenInstallation(&apos;Maven 3.3.3&apos;)
      }
    }
  }
}

listView(&apos;Seed Jobs&apos;) {
    description(&apos;&apos;)
    filterBuildQueue()
    filterExecutors()
    jobs {
        regex(/.*seed-job.*/)
    }
    columns {
        status()
        weather()
        name()
        lastSuccess()
        lastFailure()
        lastDuration()
        buildButton()
    }
}

listView(&apos;DSL Tutorial Jobs&apos;) {
    description(&apos;&apos;)
    filterBuildQueue()
    filterExecutors()
    jobs {
        regex(/.*Tutorial.*/)
    }
    columns {
        status()
        weather()
        name()
        lastSuccess()
        lastFailure()
        lastDuration()
        buildButton()
    }
}</scriptText>
      <usingScriptText>true</usingScriptText>
      <ignoreExisting>false</ignoreExisting>
      <removedJobAction>DELETE</removedJobAction>
      <removedViewAction>DELETE</removedViewAction>
      <lookupStrategy>JENKINS_ROOT</lookupStrategy>
      <additionalClasspath></additionalClasspath>
    </javaposse.jobdsl.plugin.ExecuteDslScripts>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
